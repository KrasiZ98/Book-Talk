{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport * as authServices from '../../services/authServices';\nimport editUserValidation from '../../components/edit-user/editUserValidation';\nimport { useParams } from 'react-router-dom';\nexport default function useUserEdit() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    users,\n    updateUser\n  } = useContext(AuthContext);\n  const [formError, setFormError] = useState({});\n  const [currentUser, setCurrentUser] = useState({\n    email: '',\n    username: '',\n    image: '',\n    password: '',\n    reppass: '',\n    wishReadBook: ''\n  });\n  console.log(currentUser);\n  useEffect(() => {\n    // Find the user data once it's available\n    const user = users.find(x => x.id === Number(id));\n    if (user) {\n      setCurrentUser({\n        email: user.email,\n        username: user.username,\n        image: user.image,\n        password: user.password,\n        reppass: user.reppass,\n        wishReadBook: user.wishReadBook\n      });\n    }\n  }, [id, users]);\n  function onChange(e) {\n    setCurrentUser(oldValue => ({\n      ...oldValue,\n      [e.target.name]: e.target.value\n    }));\n  }\n  function onSubmit(event) {\n    event.preventDefault();\n    const error = editUserValidation(formValue);\n    setFormError(error);\n    if (Object.values(error).length === 0) {\n      updateUser(id, formValue);\n    }\n  }\n  return {\n    formValue: currentUser,\n    formError,\n    onChange,\n    onSubmit\n  };\n}\n_s(useUserEdit, \"mlAza+HHJgJ5MwVHLLjX9WGzNqE=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","authServices","editUserValidation","useParams","useUserEdit","_s","id","users","updateUser","formError","setFormError","currentUser","setCurrentUser","email","username","image","password","reppass","wishReadBook","console","log","user","find","x","Number","onChange","e","oldValue","target","name","value","onSubmit","event","preventDefault","error","formValue","Object","values","length"],"sources":["D:/Book Talk/client/src/custom-hooks/hooks-forms/useUserEdit.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport * as authServices from '../../services/authServices';\r\nimport editUserValidation from '../../components/edit-user/editUserValidation';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function useUserEdit() {\r\n\r\n    const { id } = useParams();\r\n\r\n    const { users, updateUser } = useContext(AuthContext);\r\n\r\n    const [formError, setFormError] = useState({});\r\n    const [currentUser, setCurrentUser] = useState({\r\n        email: '',\r\n        username: '',\r\n        image: '',\r\n        password: '',\r\n        reppass: '',\r\n        wishReadBook: '',\r\n    });\r\n\r\n\r\n\r\n\r\n    console.log(currentUser)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Find the user data once it's available\r\n        const user = users.find((x) => x.id === Number(id));\r\n\r\n        if (user) {\r\n            setCurrentUser({\r\n                email: user.email,\r\n                username: user.username,\r\n                image: user.image,\r\n                password: user.password,\r\n                reppass: user.reppass,\r\n                wishReadBook: user.wishReadBook,\r\n            });\r\n        }\r\n    }, [id, users]);\r\n\r\n\r\n    function onChange(e) {\r\n        setCurrentUser(oldValue => ({\r\n            ...oldValue,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n    }\r\n\r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        const error = editUserValidation(formValue);\r\n        setFormError(error);\r\n\r\n        if (Object.values(error).length === 0) {\r\n            updateUser(id, formValue)\r\n        }\r\n    }\r\n\r\n    return { formValue: currentUser, formError, onChange, onSubmit };\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAO,KAAKC,YAAY,MAAM,6BAA6B;AAC3D,OAAOC,kBAAkB,MAAM,+CAA+C;AAC9E,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAElC,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,CAAC,CAAC;EAE1B,MAAM;IAAEI,KAAK;IAAEC;EAAW,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAErD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC;IAC3Cc,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAClB,CAAC,CAAC;EAKFC,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;EAIxBb,SAAS,CAAC,MAAM;IACZ;IACA,MAAMuB,IAAI,GAAGd,KAAK,CAACe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACjB,EAAE,KAAKkB,MAAM,CAAClB,EAAE,CAAC,CAAC;IAEnD,IAAIe,IAAI,EAAE;MACNT,cAAc,CAAC;QACXC,KAAK,EAAEQ,IAAI,CAACR,KAAK;QACjBC,QAAQ,EAAEO,IAAI,CAACP,QAAQ;QACvBC,KAAK,EAAEM,IAAI,CAACN,KAAK;QACjBC,QAAQ,EAAEK,IAAI,CAACL,QAAQ;QACvBC,OAAO,EAAEI,IAAI,CAACJ,OAAO;QACrBC,YAAY,EAAEG,IAAI,CAACH;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACZ,EAAE,EAAEC,KAAK,CAAC,CAAC;EAGf,SAASkB,QAAQA,CAACC,CAAC,EAAE;IACjBd,cAAc,CAACe,QAAQ,KAAK;MACxB,GAAGA,QAAQ;MACX,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAC9B,CAAC,CAAC,CAAC;EACP;EAEA,SAASC,QAAQA,CAACC,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,KAAK,GAAGhC,kBAAkB,CAACiC,SAAS,CAAC;IAC3CzB,YAAY,CAACwB,KAAK,CAAC;IAEnB,IAAIE,MAAM,CAACC,MAAM,CAACH,KAAK,CAAC,CAACI,MAAM,KAAK,CAAC,EAAE;MACnC9B,UAAU,CAACF,EAAE,EAAE6B,SAAS,CAAC;IAC7B;EACJ;EAEA,OAAO;IAAEA,SAAS,EAAExB,WAAW;IAAEF,SAAS;IAAEgB,QAAQ;IAAEM;EAAS,CAAC;AACpE;AAAC1B,EAAA,CA1DuBD,WAAW;EAAA,QAEhBD,SAAS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}