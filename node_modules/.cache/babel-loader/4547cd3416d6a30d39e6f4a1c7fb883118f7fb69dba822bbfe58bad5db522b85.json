{"ast":null,"code":"var _jsxFileName = \"D:\\\\Book Talk\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport useLocalStorage from \"../custom-hooks/hook-localStorage/useLocalStorage\";\nimport { AUTH_DATA_STORAGE } from \"../api/api\";\nimport * as authServices from \"../services/authServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthContextProvider = props => {\n  _s();\n  const [state, setState] = useLocalStorage(AUTH_DATA_STORAGE, []);\n  const [serverError, setServerError] = useState(null);\n  async function userRegister(user) {\n    const allUsers = await authServices.getAllUsers();\n    const existingEmail = allUsers.find(x => x.email === user.email);\n    if (existingEmail) {}\n  }\n  async function userLogin(user) {\n    console.log(user);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state,\n      userRegister,\n      userLogin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"NNRl5HmEEv0ZfWLkQS6DElQ9WKw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","useLocalStorage","AUTH_DATA_STORAGE","authServices","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","props","_s","state","setState","serverError","setServerError","userRegister","user","allUsers","getAllUsers","existingEmail","find","x","email","userLogin","console","log","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Book Talk/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport useLocalStorage from \"../custom-hooks/hook-localStorage/useLocalStorage\";\r\nimport { AUTH_DATA_STORAGE } from \"../api/api\";\r\nimport * as authServices from \"../services/authServices\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n\r\n    const [state, setState] = useLocalStorage(AUTH_DATA_STORAGE, []);\r\n    const [serverError, setServerError] = useState(null);\r\n\r\n    async function userRegister(user) {\r\n        const allUsers= await authServices.getAllUsers();\r\n        const existingEmail = allUsers.find(x => x.email === user.email);\r\n        if(existingEmail) {\r\n\r\n        }\r\n    }\r\n\r\n    async function userLogin(user) {\r\n        console.log(user)\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user: state, userRegister, userLogin }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,eAAe,MAAM,mDAAmD;AAC/E,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,OAAO,KAAKC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,MAAMQ,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,eAAe,CAACC,iBAAiB,EAAE,EAAE,CAAC;EAChE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpD,eAAec,YAAYA,CAACC,IAAI,EAAE;IAC9B,MAAMC,QAAQ,GAAE,MAAMb,YAAY,CAACc,WAAW,CAAC,CAAC;IAChD,MAAMC,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKN,IAAI,CAACM,KAAK,CAAC;IAChE,IAAGH,aAAa,EAAE,CAElB;EACJ;EAEA,eAAeI,SAASA,CAACP,IAAI,EAAE;IAC3BQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACrB;EAEA,oBACIV,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI,EAAEL,KAAK;MAAEI,YAAY;MAAEQ;IAAU,CAAE;IAAAK,QAAA,EACjEnB,KAAK,CAACmB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAAtB,EAAA,CAtBKF,mBAAmB;EAAA,QAEKN,eAAe;AAAA;AAAA+B,EAAA,GAFvCzB,mBAAmB;AAwBzB,eAAeA,mBAAmB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}