{"ast":null,"code":"var _jsxFileName = \"D:\\\\Book Talk\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport useLocalStorage from \"../custom-hooks/hook-localStorage/useLocalStorage\";\nimport { AUTH_DATA_STORAGE } from \"../api/api\";\nimport * as authServices from \"../services/authServices\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthContextProvider = props => {\n  _s();\n  const [state, setState] = useLocalStorage(AUTH_DATA_STORAGE, []);\n  const [serverError, setServerError] = useState(null);\n  const navigate = useNavigate();\n  async function userRegister(user) {\n    const allUsers = await authServices.getAllUsers();\n    const existingEmail = allUsers.find(x => x.email === user.email);\n    if (existingEmail) {\n      setServerError(\"Email is alredy taken...\");\n      return serverError;\n    }\n    const existingUsername = allUsers.find(x => x.username === user.username);\n    if (existingUsername) {\n      setServerError(\"Username is alredy taken...\");\n      return serverError;\n    }\n    await authServices.register(user);\n    setState(user);\n    navigate('/');\n  }\n  async function userLogin(user) {\n    const allUsers = await authServices.getAllUsers();\n    if (allUsers.length === 0) {\n      setServerError(\"Email or password don't match...\");\n      return serverError;\n    } else {\n      const existingUser = allUsers.find(x => x.email === user.email);\n      console.log(existingUser);\n      if (existingUser === undefined) {\n        setServerError(\"Email or password don't match...\");\n        return serverError;\n      }\n      if (existingUser.password !== user.password) {\n        setServerError(\"Email or password don't match...\");\n        return serverError;\n      }\n    }\n    setState(user);\n    navigate('/');\n  }\n  function userLogout() {\n    navigate('/login');\n    setState({});\n    localStorage.clear(AUTH_DATA_STORAGE);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state,\n      serverError,\n      userRegister,\n      userLogin,\n      userLogout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"s2K9USQnvmbrRNFLXFJFGcbgYZw=\", false, function () {\n  return [useLocalStorage, useNavigate];\n});\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","useLocalStorage","AUTH_DATA_STORAGE","authServices","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","props","_s","state","setState","serverError","setServerError","navigate","userRegister","user","allUsers","getAllUsers","existingEmail","find","x","email","existingUsername","username","register","userLogin","length","existingUser","console","log","undefined","password","userLogout","localStorage","clear","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Book Talk/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport useLocalStorage from \"../custom-hooks/hook-localStorage/useLocalStorage\";\r\nimport { AUTH_DATA_STORAGE } from \"../api/api\";\r\nimport * as authServices from \"../services/authServices\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n\r\n    const [state, setState] = useLocalStorage(AUTH_DATA_STORAGE, []);\r\n    const [serverError, setServerError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    async function userRegister(user) {\r\n        const allUsers = await authServices.getAllUsers();\r\n        const existingEmail = allUsers.find(x => x.email === user.email);\r\n\r\n        if (existingEmail) {\r\n            setServerError(\"Email is alredy taken...\");\r\n            return serverError;\r\n        }\r\n\r\n        const existingUsername = allUsers.find(x => x.username === user.username);\r\n        if (existingUsername) {\r\n            setServerError(\"Username is alredy taken...\");\r\n            return serverError;\r\n        }\r\n\r\n        await authServices.register(user)\r\n        setState(user);\r\n        navigate('/');\r\n\r\n    }\r\n\r\n    async function userLogin(user) {\r\n        const allUsers = await authServices.getAllUsers();\r\n        if (allUsers.length === 0) {\r\n            setServerError(\"Email or password don't match...\");\r\n            return serverError;\r\n        } else {\r\n\r\n        const existingUser = allUsers.find(x => x.email === user.email);\r\n        console.log(existingUser)\r\n        if (existingUser === undefined) {\r\n            setServerError(\"Email or password don't match...\");\r\n            return serverError;\r\n        }\r\n\r\n        if (existingUser.password !== user.password) {\r\n            setServerError(\"Email or password don't match...\");\r\n            return serverError;\r\n        }\r\n\r\n    }\r\n        setState(user);\r\n        navigate('/');\r\n    }\r\n\r\n\r\n    function userLogout() {\r\n        navigate('/login')\r\n        setState({});\r\n        localStorage.clear(AUTH_DATA_STORAGE);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user: state, serverError, userRegister, userLogin, userLogout }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,eAAe,MAAM,mDAAmD;AAC/E,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,OAAO,KAAKC,YAAY,MAAM,0BAA0B;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,MAAMS,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,eAAe,CAACC,iBAAiB,EAAE,EAAE,CAAC;EAChE,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMe,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,eAAeY,YAAYA,CAACC,IAAI,EAAE;IAC9B,MAAMC,QAAQ,GAAG,MAAMf,YAAY,CAACgB,WAAW,CAAC,CAAC;IACjD,MAAMC,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKN,IAAI,CAACM,KAAK,CAAC;IAEhE,IAAIH,aAAa,EAAE;MACfN,cAAc,CAAC,0BAA0B,CAAC;MAC1C,OAAOD,WAAW;IACtB;IAEA,MAAMW,gBAAgB,GAAGN,QAAQ,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACG,QAAQ,KAAKR,IAAI,CAACQ,QAAQ,CAAC;IACzE,IAAID,gBAAgB,EAAE;MAClBV,cAAc,CAAC,6BAA6B,CAAC;MAC7C,OAAOD,WAAW;IACtB;IAEA,MAAMV,YAAY,CAACuB,QAAQ,CAACT,IAAI,CAAC;IACjCL,QAAQ,CAACK,IAAI,CAAC;IACdF,QAAQ,CAAC,GAAG,CAAC;EAEjB;EAEA,eAAeY,SAASA,CAACV,IAAI,EAAE;IAC3B,MAAMC,QAAQ,GAAG,MAAMf,YAAY,CAACgB,WAAW,CAAC,CAAC;IACjD,IAAID,QAAQ,CAACU,MAAM,KAAK,CAAC,EAAE;MACvBd,cAAc,CAAC,kCAAkC,CAAC;MAClD,OAAOD,WAAW;IACtB,CAAC,MAAM;MAEP,MAAMgB,YAAY,GAAGX,QAAQ,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKN,IAAI,CAACM,KAAK,CAAC;MAC/DO,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;MACzB,IAAIA,YAAY,KAAKG,SAAS,EAAE;QAC5BlB,cAAc,CAAC,kCAAkC,CAAC;QAClD,OAAOD,WAAW;MACtB;MAEA,IAAIgB,YAAY,CAACI,QAAQ,KAAKhB,IAAI,CAACgB,QAAQ,EAAE;QACzCnB,cAAc,CAAC,kCAAkC,CAAC;QAClD,OAAOD,WAAW;MACtB;IAEJ;IACID,QAAQ,CAACK,IAAI,CAAC;IACdF,QAAQ,CAAC,GAAG,CAAC;EACjB;EAGA,SAASmB,UAAUA,CAAA,EAAG;IAClBnB,QAAQ,CAAC,QAAQ,CAAC;IAClBH,QAAQ,CAAC,CAAC,CAAC,CAAC;IACZuB,YAAY,CAACC,KAAK,CAAClC,iBAAiB,CAAC;EACzC;EAEA,oBACII,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI,EAAEN,KAAK;MAAEE,WAAW;MAAEG,YAAY;MAAEW,SAAS;MAAEO;IAAW,CAAE;IAAAK,QAAA,EAC1F9B,KAAK,CAAC8B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAAjC,EAAA,CA/DKF,mBAAmB;EAAA,QAEKP,eAAe,EAExBG,WAAW;AAAA;AAAAwC,EAAA,GAJ1BpC,mBAAmB;AAiEzB,eAAeA,mBAAmB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}